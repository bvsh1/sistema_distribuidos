# docker-compose.yml (VERSIÓN CORREGIDA)
services:
  llm-service:
    build:
      context: ./src/llm-client
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - llm-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  cache-service:
    build:
      context: ./src/cache-system
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      llm-service:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - llm-network
    environment:
      - LLM_SERVICE_URL=http://llm-service:5000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  traffic-generator:
    build:
      context: ./src/traffic-generator
      dockerfile: Dockerfile
    depends_on:
      cache-service:
        condition: service_healthy
    restart: "no"
    networks:
      - llm-network
    environment:
      - CACHE_SERVICE_URL=http://cache-service:8000

  scoring-service:
    build:
      context: ./src/scoring
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env
    networks:
      - llm-network
    environment:
      - CACHE_SERVICE_URL=http://cache-service:8000
      - LLM_SERVICE_URL=http://llm-service:5000
    restart: unless-stopped

  # ✅ NUEVO SERVICIO - DENTRO DEL BLOQUE SERVICES
  storage-service:
    build:
      context: ./src/storage
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    env_file:
      - .env
    networks:
      - llm-network
    volumes:
      - ./storage_data:/app/storage
    environment:
      - STORAGE_PORT=8081
    restart: unless-stopped

networks:
  llm-network:
    driver: bridge